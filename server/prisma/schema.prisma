// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(uuid())
  name         String?
  primaryemail String  @unique

  authentications Authentication[]
  sessions        Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum AuthProvider {
  LOCAL
  GOOGLE
}

model Authentication {
  id       String       @id @default(uuid())
  userId   String
  user     User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  provider AuthProvider
  email    String

  // The unique ID from the provider (e.g., Google's 'sub' ID)
  // This is optional because a LOCAL user won't have one.
  providerId             String? @unique
  provider_access_token  String?
  access_token_iv        String?
  provider_refresh_token String?
  refresh_token_iv       String?

  // The hashed password for the 'LOCAL' provider
  // This is optional because a Google user won't have one.
  password String?

  // A user can only have one of each provider type.
  @@unique([userId, provider])
}

model Session {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshToken String   @unique
  ip           String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([userId, ip])
}
